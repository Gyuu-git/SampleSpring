<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Book">
	
	<sql id="bookSearch">
		<if test="searchType != null and searchType == 'title'">
			AND (TITLE LIKE '%'||#{searchWord}||'%')
		</if>
		<if test="searchType != null and searchType == 'category'">
			AND (CATEGORY LIKE '%'||#{searchWord}||'%')
		</if>
	</sql>
	
	<select id="selectBookList" parameterType="hashMap" resultType="hashMap">
		SELECT 
			BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
		FROM BOOK
		WHERE 1=1
	</select>
	
	<select id="selectBook" parameterType="hashMap" resultType="hashMap">
		SELECT 
			BOOK_ID, TITLE, CATEGORY, PRICE, INSERT_DATE
		FROM BOOK
		WHERE BOOK_ID = #{bookId}
	</select>
	
	<insert id="insertBook" parameterType="hashMap">
		<selectKey keyProperty="book_id" resultType="int" order="BEFORE">
			SELECT seq_book1.NEXTVAL FROM DUAL		
		</selectKey>
		INSERT INTO BOOK(
			BOOK_ID, TITLE, CATEGORY, PRICE
		)VALUES(
			#{book_id}, #{title}, #{category}, #{price}
		)
	</insert>
	
	<delete id="deleteBook" parameterType="hashMap">
		DELETE FROM BOOK
		WHERE BOOK_ID = #{bookId}
	</delete>
	
	<update id="updateBook" parameterType="hashMap">
		UPDATE BOOK
		SET
			TITLE = #{title},
			CATEGORY = #{category},
			PRICE = #{price}
		WHERE BOOK_ID = #{bookId}
	</update>
	
	<select id="selectBookCount" parameterType="paginationInfoVO" resultType="int">
		SELECT COUNT(BOOK_ID) 
		FROM BOOK 
		WHERE 1=1
		<include refid="bookSearch"/>
	</select>
	
	<!-- 
		OVER()는 GROUP BY나 서브쿼리를 사용하지 않고 분석함수(SUM, MAX, COUNT)와 집계 함수(GROUP BY, ORDER BY)를 사용할 수 있다.
	 -->
	<select id="selectBookList2" parameterType="paginationInfoVO" resultType="bookVO">
		SELECT
			B.*
		FROM (
			SELECT
				A.*, ROW_NUMBER() OVER (ORDER BY A.BOOK_ID DESC) RNUM
			FROM (
				SELECT 
					BOOK_ID, TITLE, CATEGORY, PRICE, 
					TO_DATE(INSERT_DATE, 'yy-mm-dd hh24:mi:ss') INSERT_DATE
				FROM BOOK 
				WHERE 1=1
				<include refid="bookSearch"/>
				ORDER BY BOOK_ID DESC
			) A 
		) B
		<![CDATA[
			WHERE B.RNUM >= #{startRow} AND B.RNUM <= #{endRow}
		]]>
	</select>
	
	<insert id="insertBookByFile" parameterType="bookVO">
		<selectKey keyProperty="bookId" resultType="int" order="BEFORE">
			SELECT seq_book.NEXTVAL FROM DUAL		
		</selectKey>
		INSERT INTO BOOK(
			BOOK_ID, TITLE, CATEGORY, PRICE
		)VALUES(
			#{bookId}, #{title}, #{category}, #{price}
		)
	</insert>
	
	
	<insert id="insertBookFile" parameterType="bookFileVO">
		INSERT INTO BOOKFILE(
			FILE_NO, BOOK_ID, FILE_NAME, FILE_SIZE, 
			FILE_FANCYSIZE, FILE_MIME, FILE_SAVEPATH, FILE_DOWNCOUNT
		) VALUES(
			SEQ_BOOKFILE.NEXTVAL, #{bookId}, #{fileName}, #{fileSize}, 
			#{fileFancysize}, #{fileMime}, #{fileSavepath}, 0
		)
		
	</insert>
	
	<resultMap type="bookVO" id="bookMap">
		<id property="bookId" column="BOOK_ID"/>
		<result property="bookId" column="BOOK_ID"/>
		<result property="title" column="TITLE"/>
		<result property="category" column="CATEGORY"/>
		<result property="price" column="PRICE"/>
		<result property="insertDate" column="INSERT_DATE"/>
		<collection property="bookFileList" resultMap="bookFileMap"/>
	</resultMap>
	
	<resultMap type="bookFileVO" id="bookFileMap">
		<id property="fileNo" column="FILE_NO"/>
		<result property="fileNo" column="FILE_NO"/>
		<result property="fileName" column="FILE_NAME"/>
		<result property="fileSize" column="FILE_SIZE"/>
		<result property="fileFancysize" column="FILE_FANCYSIZE"/>
		<result property="fileMime" column="FILE_MIME"/>
		<result property="fileSavepath" column="FILE_SAVEPATH"/>
		<result property="fileDowncount" column="FILE_DOWNCOUNT"/>
	</resultMap>
	
	<select id="selectBook2" parameterType="int" resultMap="bookMap">
		SELECT
			B.BOOK_ID, TITLE, CATEGORY, PRICE, 
			TO_CHAR(INSERT_DATE, 'yy-mm-dd hh24:mi:ss') INSERT_DATE,
			FILE_NO, FILE_NAME, FILE_SIZE, FILE_FANCYSIZE, FILE_MIME, FILE_SAVEPATH,
			FILE_DOWNCOUNT
		FROM BOOK B LEFT OUTER JOIN BOOKFILE BF ON(B.BOOK_ID = BF.BOOK_ID)
		WHERE B.BOOK_ID = #{bookId}
	</select>
	
</mapper>















